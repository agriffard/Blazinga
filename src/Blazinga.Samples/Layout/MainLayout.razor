@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JS
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <ul class="navbar-nav flex-row flex-wrap ms-md-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle d-flex align-items-center" style="text-decoration: none;" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-@GetThemeCssClass()"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <button class="dropdown-item d-flex align-items-center" @onclick="() => SetThemeLightAsync()">
                                <i class="bi bi-sun-fill"></i> Light
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item d-flex align-items-center" @onclick="() => SetThemeDarkAsync()">
                                <i class="bi bi-moon-stars-fill"></i> Dark
                            </button>
                        </li>
                        <li>
                            <button class="dropdown-item d-flex align-items-center" @onclick="() => SetThemeAutoAsync()">
                                <i class="bi bi-circle-half"></i> Auto
                            </button>
                        </li>
                    </ul>
                </li>
            </ul>
            @* <select class="form-select w-auto d-inline" @onchange="OnThemeChanged">
                <option value="light" selected="@(ThemeService.CurrentTheme == "light")">‚òÄÔ∏è Light</option>
                <option value="dark" selected="@(ThemeService.CurrentTheme == "dark")">üåô Dark</option>
                <option value="auto" selected="@(ThemeService.CurrentTheme == "auto")">üåì Auto</option>
            </select> *@
            @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a> *@
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string GetThemeCssClass()
    {
        return ThemeService.CurrentTheme switch
        {
            "light" => "sun-fill",
            "dark" => "moon-stars-fill",
            _ => "circle-half"
        };
    }
    // private string GetThemeIcon()
    // {
    //     return ThemeService.CurrentTheme switch
    //     {
    //         "light" => "‚òÄÔ∏è",
    //         "dark" => "üåô",
    //         _ => "üåì"
    //     };
    // }

    private async Task SetThemeAsync(string theme)
    {
        await ThemeService.SetThemeAsync(theme);
        StateHasChanged(); // update icon if needed
    }
    private async Task SetThemeLightAsync()
    {
        await SetThemeAsync("light");
    }
    private async Task SetThemeDarkAsync()
    {
        await SetThemeAsync("dark");
    }
    private async Task SetThemeAutoAsync()
    {
        await SetThemeAsync("auto");
    }
}
