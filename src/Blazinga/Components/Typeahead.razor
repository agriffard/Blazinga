@typeparam TItem

<div class="position-relative">
    <div class="form-control d-flex flex-wrap align-items-center gap-1" @onclick="() => inputRef.FocusAsync()">
        @if (MultiSelect)
        {
            @foreach (var item in SelectedItems)
            {
                <span class="badge bg-primary">
                    @ItemSelector(item)
                    <button type="button" class="btn-close btn-close-white btn-sm ms-2"
                            @onclick="() => RemoveItem(item)" aria-label="Remove"></button>
                </span>
            }
        }
        else if (SelectedItems.Count == 1)
        {
            <span class="me-2">@ItemSelector(SelectedItems[0])</span>
        }

        <input type="text"
               class="border-0 flex-grow-1"
               value="@SearchText"
               @oninput="OnInput"
               @onfocus="ShowDropdown"
               @onkeydown="HandleKeyDown"
               placeholder="@Placeholder"
               @ref="inputRef"
               hidden="@(!MultiSelect && SelectedItems.Count == 1)" />
    </div>

    @if (ShowSuggestions && FilteredItems.Any())
    {
        <ul class="dropdown-menu show w-100" style="max-height: @(Height)px; overflow-y: auto;">
            @foreach (var item in FilteredItems)
            {
                <li>
                    <a class="dropdown-item" @onclick="() => SelectItem(item)">
                        @if (ItemTemplate != null)
                        {
                            @ItemTemplate(item)
                        }
                        else
                        {
                            @ItemSelector(item)
                        }
                    </a>
                </li>
            }
        </ul>
    }
    @if (!MultiSelect && SelectedItems.Count == 1)
    {
        <button class="btn btn-close btn-sm position-absolute end-0 top-0 me-2 mt-2" type="button" @onclick="ClearSelection" />
    }
</div>
